worker_processes  auto;
rtmp_auto_push on;

events {}

rtmp {
    server {
    listen 1935;
    allow play all;

        #creates our "live" full-resolution DASH videostream from our incoming encoder stream and tells where to put the DASH video manifest and video fragments
        application dash {
            allow play all;
            live on;
            #record all;
            record off;
   #         record_path videos;
   #         record_unique on;
            #allow publish <your_sender_ip_here>;
            allow publish 127.0.0.1;
            allow publish 172.0.0.0/8;
            deny publish all;
            meta copy;
            wait_key on;
            wait_video on;
            idle_streams off;
          
            # Dash settings and pushing towards repeaters
            dash on;
            dash_nested on;
            dash_path /usr/share/nginx/html/stream/dash;
            dash_fragment 3;
            dash_playlist_length 20;
            dash_cleanup on;

            #dash_clock_compensation http_head;
            #dash_clock_helper_uri https://<your_server_domain_here>/time;

            push rtmp://localhost/hls/hls; # it goes to generate a HLS streaming

        }     
      
        application hls {
            # I despise iOS devices!
            live on;
            hls on;
            hls_path /usr/share/nginx/html/stream/hls;
            hls_nested on;

            hls_variant _low   BANDWIDTH=500000;
            hls_variant _med  BANDWIDTH=1500000;
            hls_variant _high BANDWIDTH=5000000;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        off; 
    #keepalive_timeout  65;

    server {
        listen 8080;
        #server_name home;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            #alias HLS/live;
            root "/usr/share/ngingx/html/stream";
            add_header Cache-Control no-cache;
						
						# CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # Allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }




        location /dash {
            root "/usr/share/nginx/html/stream";
            add_header Cache-Control no-cache;

						# Serve DASH fragments
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }

						# CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # Allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        #allows us to host some webpages which can show our videos: "http://localhost:8080/index.html" 
        location / {
            root   /usr/share/nginx/html;
            index  index.html;
        }

    }
}
